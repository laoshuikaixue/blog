{"title":"Python OJ题：快速求出现次数最多的数字","uid":"c7d0ccfa3f344c02b0cc5d43076d420e","slug":"Python-OJ题：快速求出现次数最多的数字","date":"2024-01-11T14:45:34.000Z","updated":"2024-01-20T14:29:57.134Z","comments":true,"path":"api/articles/Python-OJ题：快速求出现次数最多的数字.json","keywords":null,"cover":null,"content":"<h1 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h1><h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>景区在售票时，从游客身份证中提取了年龄信息。现在，景区管理员想知道，按年龄统计，游客数量最多的是什么年龄？</p>\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>只有一行，n 个游客年龄数据，数据为整数，两个数据之间有一个空格</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>第一行：输出最多游客数量的年龄，相同数量的，优先输出年龄大的</p>\n<p>第二行：输出最多游客的数量</p>\n<h1 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">35 40 80 40 40 40 35 40 15 20</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">40</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>要解决这道题，我们只需要创建一个列表，记录游客的年龄信息，然后找到列表中元素出现的频次，并找出出现次数最多的元素及其对应的出现次数</p>\n<p>那么我们可以通过Python collections 模块中的 Counter 类来快速找到列表中出现最多的数字</p>\n<p>Counter 是一个字典子类，用于计数可哈希对象（如本题中列表中的元素）的数量</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>我们首先创建一个 Counter 对象 c，通过传入列表 lst 进行初始化。在这个过程中，Counter 对 lst 中的所有元素进行计数，结果是一个字典，其中键是列表中的元素，值是它们在列表中出现的次数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = Counter(lst)</span><br></pre></td></tr></table></figure>\n\n<p>然后使用 Counter 的 most_common() 方法获取出现次数最多的元素。most_common() 方法返回一个列表，其中包含元组，每个元组包含一个元素及其出现次数，按出现次数从高到低排序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.most_common(1)[0][0]</span><br><span class=\"line\">c.most_common(1)[0][1]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>c.most_common(1)</code> 表示我们只需要出现次数最多的那一个元素及其出现次数，因此传入参数 1</p>\n</li>\n<li><p><code>[0][0]</code> 和 <code>[0][1]</code> 分别用于获取这个元组的第一个和第二个元素，也就是出现次数最多的元素及其对应的出现次数</p>\n</li>\n</ul>\n<p>再将出现次数最多的元素赋值给变量 a，出现次数赋值给变量 b</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = c.most_common(1)[0][0]</span><br><span class=\"line\">b = c.most_common(1)[0][1]</span><br></pre></td></tr></table></figure>\n\n<p>最后，分别打印出出现次数最多的元素 a 和其对应的出现次数 b</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br></pre></td></tr></table></figure>\n\n<p>但要注意的是，本题中要求相同数量的，优先输出年龄大的。而使用这种方法会优先输出年龄小的，所以我们需要做一些改变</p>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from collections import Counter</span><br><span class=\"line\"></span><br><span class=\"line\">lst = list(map(int, input().split()))</span><br><span class=\"line\"></span><br><span class=\"line\">c = Counter(lst)</span><br><span class=\"line\">max_count = max(c.values())</span><br><span class=\"line\">max_ages = [age for age, count in c.items() if count == max_count]</span><br><span class=\"line\">max_ages.sort(reverse=True)</span><br><span class=\"line\"></span><br><span class=\"line\">a = max_ages[0]</span><br><span class=\"line\">b = max_count</span><br><span class=\"line\"></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br></pre></td></tr></table></figure>","feature":true,"text":"本文主要介绍了如何使用Python collections 模块中的 Counter 类来找到列表中出现最多的数字...","permalink":"/post/Python-OJ题：快速求出现次数最多的数字","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":15,"path":"api/categories/编程.json"},{"name":"Python","slug":"编程/Python","count":12,"path":"api/categories/编程/Python.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">问题描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">输入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">输出</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">样例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90\"><span class=\"toc-text\">分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">代码示例</span></a></li></ol></li></ol>","author":{"name":"LaoShui","slug":"blog-author","avatar":"/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Python OJ题典型算法：字符型数据与ASCII码详解","uid":"d474c339b16bd4b2fa6459002b26491b","slug":"Python-OJ题典型算法：字符型数据与ASCII码详解","date":"2024-01-20T14:47:10.000Z","updated":"2024-01-20T14:47:57.621Z","comments":true,"path":"api/articles/Python-OJ题典型算法：字符型数据与ASCII码详解.json","keywords":null,"cover":null,"text":"本文介绍了字符型数据与ASCII码的相关知识，包括ASCII码的基本概念和原理，以及如何将字符转换为对应的ASCII码。同时，还提供了示例代码和解题技巧，帮助读者更好地理解和运用这些知识...","permalink":"/post/Python-OJ题典型算法：字符型数据与ASCII码详解","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":15,"path":"api/categories/编程.json"},{"name":"Python","slug":"编程/Python","count":12,"path":"api/categories/编程/Python.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"author":{"name":"LaoShui","slug":"blog-author","avatar":"/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"feature":true},"next_post":{"title":"开源：升学E网通绕过会员以及点击检测（已失效）","uid":"c0cbd51e6cc6162b96e9aed7b5281420","slug":"开源：升学E网通绕过会员以及点击检测","date":"2024-07-18T07:37:54.000Z","updated":"2024-08-22T05:33:02.410Z","comments":true,"path":"api/articles/开源：升学E网通绕过会员以及点击检测.json","keywords":null,"cover":[],"text":"本文分享了对升学E网通的研究开源项目...","permalink":"/post/开源：升学E网通绕过会员以及点击检测","photos":[],"count_time":{"symbolsCount":955,"symbolsTime":"1 mins."},"categories":[{"name":"开源","slug":"开源","count":1,"path":"api/categories/开源.json"},{"name":"编程","slug":"开源/编程","count":1,"path":"api/categories/开源/编程.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"author":{"name":"LaoShui","slug":"blog-author","avatar":"/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"feature":false}}