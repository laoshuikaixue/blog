{"title":"Python 快速排序：原理、使用场景与实现方法","uid":"70c15220323e313ec6083d38a84c2668","slug":"Python-快速排序：原理、使用场景与实现方法","date":"2024-02-09T08:31:40.000Z","updated":"2024-02-09T08:35:26.136Z","comments":true,"path":"api/articles/Python-快速排序：原理、使用场景与实现方法.json","keywords":null,"cover":[],"content":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>快速排序（Quick Sort）是由英国计算机科学家托尼·霍尔于1960年提出的一种高效的排序算法。其主要特点在于采用了分治策略，通过一趟排序将待排序的数据分割成独立的两部分，其中一部分的所有数据都比另一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2019/03/quickSort.gif\" alt=\"快速排序\"></p>\n<h3 id=\"一、快速排序原理\"><a href=\"#一、快速排序原理\" class=\"headerlink\" title=\"一、快速排序原理\"></a>一、快速排序原理</h3><ol>\n<li><p><strong>选择基准元素</strong>：首先在待排序数组中选取一个基准元素（通常选择第一个或最后一个元素，也可以采用随机选择的方式以提高平均性能）。</p>\n</li>\n<li><p><strong>分区操作</strong>：重新排列数组，使得基准元素之前的所有元素都不大于它，之后的所有元素都不小于它。这个过程称为分区操作，可以通过两个指针从两端向中间移动，并交换不满足条件的元素位置来完成。</p>\n</li>\n<li><p><strong>递归排序</strong>：然后分别对基准元素左侧和右侧的子数组进行快速排序，直至所有子数组只有一个元素或者为空。</p>\n</li>\n</ol>\n<h3 id=\"二、快速排序步骤详解\"><a href=\"#二、快速排序步骤详解\" class=\"headerlink\" title=\"二、快速排序步骤详解\"></a>二、快速排序步骤详解</h3><p>假设有一个无序数组<code>[5, 3, 8, 6, 7, 2]</code>，按照快速排序的过程：</p>\n<ol>\n<li><strong>选择基准元素</strong>：我们选择第一个元素<code>5</code>作为基准。</li>\n<li><strong>分区操作</strong>：<ul>\n<li>从右向左找到第一个小于基准的元素<code>2</code>，从左向右找到第一个大于基准的元素<code>8</code>，交换它们的位置，得到<code>[2, 3, 5, 6, 7, 8]</code></li>\n<li>继续左右扫描，交换<code>5</code>和<code>3</code>，得到最终分区结果<code>[2, 3, 5, 6, 7, 8]</code>，此时基准元素位于正确位置</li>\n</ul>\n</li>\n<li><strong>递归排序</strong>：<ul>\n<li>对<code>[2, 3]</code>子数组进行快速排序</li>\n<li>对<code>[6, 7, 8]</code>子数组进行快速排序</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"三、快速排序代码实现\"><a href=\"#三、快速排序代码实现\" class=\"headerlink\" title=\"三、快速排序代码实现\"></a>三、快速排序代码实现</h3><p>以下是一个简单的快速排序实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">quick_sort</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(arr) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">    </span><br><span class=\"line\">    pivot = arr[<span class=\"built_in\">len</span>(arr) // <span class=\"number\">2</span>]</span><br><span class=\"line\">    left = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> arr <span class=\"keyword\">if</span> x &lt; pivot]</span><br><span class=\"line\">    middle = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> arr <span class=\"keyword\">if</span> x == pivot]</span><br><span class=\"line\">    right = [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> arr <span class=\"keyword\">if</span> x &gt; pivot]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> quick_sort(left) + middle + quick_sort(right)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例调用</span></span><br><span class=\"line\">unsorted_array = [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">sorted_array = quick_sort(unsorted_array)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"四、快速排序的使用场景\"><a href=\"#四、快速排序的使用场景\" class=\"headerlink\" title=\"四、快速排序的使用场景\"></a>四、快速排序的使用场景</h3><ul>\n<li>大规模数据排序：由于快速排序的平均时间复杂度为O(n log n)，对于大规模数据排序任务，快速排序具有较高的效率，尤其是在内部实现优化后，如“三数取中法”选择基准等技巧，能进一步提升性能。</li>\n<li>教育示例：快速排序展示了分治策略在解决问题上的强大威力，是学习、竞赛中广泛使用的经典实例。</li>\n<li>实际应用：在很多编程语言的标准库中，快速排序被用于实现数组和列表的排序功能，例如C++ STL中的<code>std::sort</code>函数就采用了快速排序及其改进版。</li>\n</ul>\n<p>需要注意的是，在最坏情况下，当输入数据已经完全有序或逆序时，快速排序的时间复杂度会退化到O(n²)，但这种情况在实际应用中相对较少见。为了规避这一问题，可以采用随机化选择基准元素的方法，使算法在概率意义下有较好的表现。</p>\n","feature":false,"text":"本文主要介绍了Python 快速排序：原理、使用场景与实现方法...","permalink":"/post/Python-快速排序：原理、使用场景与实现方法","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":15,"path":"api/categories/编程.json"},{"name":"Python","slug":"编程/Python","count":12,"path":"api/categories/编程/Python.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">一、快速排序原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E6%AD%A5%E9%AA%A4%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">二、快速排序步骤详解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">三、快速排序代码实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">四、快速排序的使用场景</span></a></li></ol>","author":{"name":"LaoShui","slug":"blog-author","avatar":"https://forum.dh7zoj.top/img/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"探索2FA双因素认证与TOTP时间同步一次性密码","uid":"d06e89d326c3b959da197d0b11709006","slug":"探索2FA双因素认证与TOTP时间同步一次性密码","date":"2024-03-02T04:06:33.000Z","updated":"2024-03-02T04:11:13.168Z","comments":true,"path":"api/articles/探索2FA双因素认证与TOTP时间同步一次性密码.json","keywords":null,"cover":null,"text":"本文主要介绍了2FA双因素认证与TOTP时间同步一次性密码...","permalink":"/post/探索2FA双因素认证与TOTP时间同步一次性密码","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":15,"path":"api/categories/编程.json"},{"name":"安全","slug":"编程/安全","count":1,"path":"api/categories/编程/安全.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"author":{"name":"LaoShui","slug":"blog-author","avatar":"https://forum.dh7zoj.top/img/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"feature":false},"next_post":{"title":"Python 插入排序：原理、使用场景与实现方法","uid":"0425545bbf78488183c9b7bbe87131db","slug":"Python-插入排序：原理、使用场景与实现方法","date":"2024-02-09T08:27:12.000Z","updated":"2024-02-09T08:30:12.906Z","comments":true,"path":"api/articles/Python-插入排序：原理、使用场景与实现方法.json","keywords":null,"cover":[],"text":"本文主要介绍了Python 插入排序：原理、使用场景与实现方法...","permalink":"/post/Python-插入排序：原理、使用场景与实现方法","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"编程","slug":"编程","count":15,"path":"api/categories/编程.json"},{"name":"Python","slug":"编程/Python","count":12,"path":"api/categories/编程/Python.json"}],"tags":[{"name":"官方","slug":"官方","count":16,"path":"api/tags/官方.json"}],"author":{"name":"LaoShui","slug":"blog-author","avatar":"https://forum.dh7zoj.top/img/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"feature":false}}