{"title":"浙江学考信息技术学考复习要点","uid":"042458818a0bf030644a59426600c495","slug":"浙江学考信息技术学考复习要点","date":"2025-04-05T11:42:53.000Z","updated":"2025-04-05T12:04:10.118Z","comments":true,"path":"api/articles/浙江学考信息技术学考复习要点.json","keywords":null,"cover":"https://pic.imgdb.cn/item/675c091ed0e0a243d4e3ae25.jpg","content":"<h2 id=\"01-信息基础理论\"><a href=\"#01-信息基础理论\" class=\"headerlink\" title=\"01 信息基础理论\"></a>01 信息基础理论</h2><h3 id=\"DIKW模型\"><a href=\"#DIKW模型\" class=\"headerlink\" title=\"DIKW模型\"></a>DIKW模型</h3><ul>\n<li><strong>D (Data - 数据):</strong> 对客观事物的符号表示，是原始的、未经处理的素材。<ul>\n<li><em>例:</em> 传感器读数、用户注册信息、交易记录。</li>\n</ul>\n</li>\n<li><strong>I (Information - 信息):</strong> 经过加工处理、具有特定含义的数据，用于消除不确定性。<ul>\n<li><em>特征:</em> 载体依附性、时效性、共享性、可加工处理性、真伪性、价值性。</li>\n<li><em>例:</em> 根据传感器读数判断的“温度过高”警报、整理后的用户列表、月度销售报告。</li>\n</ul>\n</li>\n<li><strong>K (Knowledge - 知识):</strong> 经过归纳、总结、提炼的信息，形成规律性的认识，指导行动。<ul>\n<li><em>例:</em> “温度超过30度需要开空调”的规则、用户画像分析、销售趋势预测模型。</li>\n</ul>\n</li>\n<li><strong>W (Wisdom - 智慧):</strong> 对知识的综合运用、创新和决策能力，具有前瞻性。<ul>\n<li><em>例:</em> 基于对用户、市场、技术的综合理解，制定新的产品策略或优化运营方案。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"信息编码与数字化\"><a href=\"#信息编码与数字化\" class=\"headerlink\" title=\"信息编码与数字化\"></a>信息编码与数字化</h3><h4 id=\"数制问题\"><a href=\"#数制问题\" class=\"headerlink\" title=\"数制问题\"></a>数制问题</h4><p>计算机内部以<strong>二进制 (B)</strong> 处理数据。常见进制还有八进制 (O)、十进制 (D)、十六进制 (H)。</p>\n<ul>\n<li><p><strong>常见进制转换:</strong></p>\n<ul>\n<li>十进制 → R进制: 除R取余法 (整数部分)，乘R取整法 (小数部分)。</li>\n<li>R进制 → 十进制: 按权相加法。</li>\n<li>二进制 ↔ 十六进制: 四位合一位 &#x2F; 一位拆四位。</li>\n<li>二进制 ↔ 八进制: 三位合一位 &#x2F; 一位拆三位。</li>\n<li><img src=\"https://pic1.imgdb.cn/item/67a8bfc1d0e0a243d4fd97e5.png\" alt=\"image\"></li>\n</ul>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 算式 (17)₁₀ + (11010)₂ 的运算结果是<br>A. (101011)₂<br>B. (110101)₂<br>C. (27)₁₀<br>D. (30)₁₀<br><strong>【答案】</strong> A<br><strong>【解析】</strong> (11010)₂ &#x3D; 1 * 2⁴ + 1 * 2³ + 0 * 2² + 1 * 2¹ + 0 * 2⁰ &#x3D; 16 + 8 + 0 + 2 + 0 &#x3D; (26)₁₀。<br>(17)₁₀ + (26)₁₀ &#x3D; (43)₁₀。<br>将 (43)₁₀ 转换为二进制:<br>43 &#x2F; 2 &#x3D; 21 … 1<br>21 &#x2F; 2 &#x3D; 10 … 1<br>10 &#x2F; 2 &#x3D; 5  … 0<br>5 &#x2F; 2 &#x3D; 2  … 1<br>2 &#x2F; 2 &#x3D; 1  … 0<br>1 &#x2F; 2 &#x3D; 0  … 1<br>倒序取余数得 (101011)₂。</p>\n</li>\n</ul>\n<h4 id=\"数字化\"><a href=\"#数字化\" class=\"headerlink\" title=\"数字化\"></a>数字化</h4><p>将模拟信号转换为数字信号的过程。</p>\n<ol>\n<li><strong>采样:</strong> 时间（或空间）上离散化。采样频率越高，信息损失越少，但数据量越大。</li>\n<li><strong>量化:</strong> 幅值（或数值）上离散化。量化位数越多，精度越高，但数据量越大。</li>\n<li><strong>编码:</strong> 将量化后的离散值用二进制代码表示。</li>\n</ol>\n<ul>\n<li><p><strong>字符编码:</strong></p>\n<ul>\n<li><strong>ASCII:</strong> 7位编码，扩展ASCII为8位 (1字节)，主要用于英文。</li>\n<li><strong>GB2312&#x2F;GBK&#x2F;GB18030:</strong> 汉字编码标准，一个汉字通常占2字节。</li>\n<li><strong>Unicode (UTF-8):</strong> 变长编码，兼容ASCII，能表示世界上几乎所有字符。</li>\n</ul>\n</li>\n<li><p><strong>存储单位:</strong></p>\n<ul>\n<li>位 (bit, b): 最小单位。</li>\n<li>字节 (Byte, B): 基本单位，1 B &#x3D; 8 b。</li>\n<li>KB, MB, GB, TB… (1 KB &#x3D; 1024 B)</li>\n</ul>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 下列关于该材料中数据与数据处理的说法，不正确的是<br><em>(材料涉及手机导航，语音输入目的地)</em><br>A. 火车票上的文字是数据的一种表现形式<br>B. 大数据处理技术能增强导航服务的智能性<br>C. 导航数据的可视化有利于观察和分析数据<br>D. 用语音规划行程路线时无需对用户语音进行数字化<br><strong>【答案】</strong> D<br><strong>【解析】</strong> 语音是模拟信号，计算机处理需要先进行采样、量化、编码，将其数字化。</p>\n</li>\n</ul>\n<h3 id=\"大数据的思维与处理\"><a href=\"#大数据的思维与处理\" class=\"headerlink\" title=\"大数据的思维与处理\"></a>大数据的思维与处理</h3><ul>\n<li><strong>特征 (4V):</strong><ul>\n<li>Volume (体量大)</li>\n<li>Velocity (速度快，实时性要求高)</li>\n<li>Variety (类型多：结构化、半结构化、非结构化)</li>\n<li>Value (价值密度低，需要挖掘)</li>\n</ul>\n</li>\n<li><strong>思维:</strong><ul>\n<li>分析全体数据，而非抽样。</li>\n<li>关注相关性，而非绝对的因果关系。</li>\n<li>接受数据的混杂性，而非追求精确。</li>\n</ul>\n</li>\n<li><strong>处理:</strong><ul>\n<li>基本思想：<strong>分治思想</strong> (将大任务分解成小任务并行处理，最后汇总)。</li>\n<li>常见架构：批处理 (MapReduce)、流计算 (Storm, Flink)、图计算 (GraphX)。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据安全\"><a href=\"#数据安全\" class=\"headerlink\" title=\"数据安全\"></a>数据安全</h3><ul>\n<li><p><strong>威胁:</strong> 硬件故障、操作失误、病毒感染、黑客攻击、自然灾害、内部泄露等。</p>\n</li>\n<li><p><strong>保障方法:</strong></p>\n<ul>\n<li><strong>物理安全:</strong> 环境控制、设备保护。</li>\n<li><strong>数据备份:</strong> 定期备份、异地容灾。</li>\n<li><strong>访问控制:</strong> 身份认证 (用户名密码、生物特征、UKey)、权限管理。</li>\n<li><strong>数据加密:</strong> 对称加密、非对称加密。</li>\n<li><strong>网络安全:</strong> 防火墙、入侵检测。</li>\n<li><strong>安全意识:</strong> 规范操作、不共享账户、定期更换密码。</li>\n</ul>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 为提升该系统数据的安全性, 下列措施不合理的是 <em>(系统为公司打卡系统)</em><br>A. 增强员工数据安全意识<br>B. 让多个员工共享一个账户<br>C. 对系统重要数据进行加密<br>D. 为服务器配备不间断电源<br><strong>【答案】</strong> B<br><strong>【解析】</strong> 共享账户无法明确责任人，是严重的安全隐患。</p>\n</li>\n</ul>\n<h3 id=\"人工智能-AI\"><a href=\"#人工智能-AI\" class=\"headerlink\" title=\"人工智能 (AI)\"></a>人工智能 (AI)</h3><ul>\n<li><p><strong>三大主义:</strong></p>\n<ul>\n<li><strong>符号主义 (基于规则):</strong> 模拟人类逻辑思维。关键词：知识库、推理引擎、专家系统、逻辑编程 (LISP, Prolog)。</li>\n<li><strong>联结主义 (基于数据):</strong> 模仿大脑神经元连接。关键词：神经网络、深度学习、数据驱动、模式识别 (图像、语音)、大模型 (ChatGPT, AlphaGo)。</li>\n<li><strong>行为主义 (基于交互):</strong> 模拟生物与环境交互。关键词：感知-行动、强化学习、试错、机器人。</li>\n</ul>\n</li>\n<li><p><strong>应用:</strong> 图像识别、语音识别、自然语言处理 (NLP)、推荐系统、自动驾驶、专家系统等。</p>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 要提升无人驾驶配送车的智能水平, 下列措施不合理的是<br>A. 完善系统对各类交通标志识别的训练<br>B. 强化系统在与环境交互中的不断学习<br>C. 持续迭代优化自动驾驶的算法<br>D. 增加无人驾驶配送车的车厢容积<br><strong>【答案】</strong> D<br><strong>【解析】</strong> 增加车厢容积属于物理结构改变，与提升智能水平（算法、学习能力）无关。选项A、B、C分别对应联结主义和行为主义的改进思路。</p>\n</li>\n</ul>\n<h2 id=\"02-Python基础代码及常见模块\"><a href=\"#02-Python基础代码及常见模块\" class=\"headerlink\" title=\"02 Python基础代码及常见模块\"></a>02 Python基础代码及常见模块</h2><h3 id=\"Python基础数据结构\"><a href=\"#Python基础数据结构\" class=\"headerlink\" title=\"Python基础数据结构\"></a>Python基础数据结构</h3><ul>\n<li><strong>字符串 (str):</strong> 不可变序列。<code>s = &#39;hello&#39;</code><ul>\n<li>索引: <code>s[0]</code> (结果 ‘h’), <code>s[-1]</code> (结果 ‘o’)</li>\n<li>切片: <code>s[1:4]</code> (结果 ‘ell’), <code>s[:3]</code> (结果 ‘hel’), <code>s[::2]</code> (结果 ‘hlo’)</li>\n<li>常用方法: <code>len()</code>, <code>+</code> (连接), <code>*</code> (重复), <code>str()</code>, <code>int()</code>, <code>float()</code>, <code>ord()</code>, <code>chr()</code>, <code>find()</code>, <code>replace()</code>, <code>split()</code></li>\n</ul>\n</li>\n<li><strong>列表 (list):</strong> 可变序列。 <code>L = [1, &#39;a&#39;, 3.14, [1, 2]]</code><ul>\n<li>索引、切片同字符串。</li>\n<li>修改: <code>L[1] = &#39;b&#39;</code></li>\n<li>常用方法: <code>append()</code>, <code>insert()</code>, <code>remove()</code>, <code>pop()</code>, <code>sort()</code>, <code>reverse()</code>, <code>len()</code></li>\n</ul>\n</li>\n<li><strong>字典 (dict):</strong> 键值对集合，无序 (Python 3.7+ 有序)，键唯一，可变。 <code>d = &#123;&#39;name&#39;: &#39;Alice&#39;, &#39;age&#39;: 18&#125;</code><ul>\n<li>取值: <code>d[&#39;name&#39;]</code> (结果 ‘Alice’)</li>\n<li>修改&#x2F;添加: <code>d[&#39;age&#39;] = 19</code>, <code>d[&#39;city&#39;] = &#39;Hangzhou&#39;</code></li>\n<li>常用方法: <code>keys()</code>, <code>values()</code>, <code>items()</code>, <code>get()</code>, <code>pop()</code>, <code>len()</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Python程序结构\"><a href=\"#Python程序结构\" class=\"headerlink\" title=\"Python程序结构\"></a>Python程序结构</h3><ul>\n<li><strong>顺序结构:</strong> 按代码书写顺序执行。</li>\n<li><strong>分支结构 (选择结构):</strong><ul>\n<li><code>if &lt;条件&gt;: &lt;语句块&gt;</code></li>\n<li><code>if &lt;条件&gt;: &lt;语句块1&gt; else: &lt;语句块2&gt;</code></li>\n<li><code>if &lt;条件1&gt;: &lt;语句块1&gt; elif &lt;条件2&gt;: &lt;语句块2&gt; ... else: &lt;语句块N&gt;</code></li>\n</ul>\n</li>\n<li><strong>循环结构:</strong><ul>\n<li><code>for &lt;变量&gt; in &lt;序列&gt;: &lt;循环体&gt;</code> (遍历序列)</li>\n<li><code>while &lt;条件&gt;: &lt;循环体&gt;</code> (条件满足时循环)</li>\n<li><code>break</code>: 跳出当前循环。</li>\n<li><code>continue</code>: 跳过本次循环，进入下一次迭代。</li>\n<li><code>else</code> (用于循环): 循环正常结束 (非 <code>break</code> 跳出) 时执行。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"函数与模块的调用\"><a href=\"#函数与模块的调用\" class=\"headerlink\" title=\"函数与模块的调用\"></a>函数与模块的调用</h3><ul>\n<li><p><strong>函数:</strong></p>\n<ul>\n<li><strong>内建函数:</strong> <code>print()</code>, <code>input()</code>, <code>len()</code>, <code>int()</code>, <code>str()</code>, <code>float()</code>, <code>type()</code>, <code>ord()</code>, <code>chr()</code>, <code>range()</code> 等。</li>\n<li><strong>自定义函数:</strong> <code>def func_name(param1, param2): ... return value</code></li>\n</ul>\n</li>\n<li><p><strong>模块:</strong></p>\n<ul>\n<li>导入: <code>import module_name</code>, <code>from module_name import function_name</code>, <code>import module_name as alias</code></li>\n<li><strong>常用模块:</strong><ul>\n<li><code>math</code>: <code>math.sqrt()</code>, <code>math.sin()</code>, <code>math.pi</code> 等。</li>\n<li><code>random</code>: <code>random.random()</code> (0到1随机浮点数), <code>random.randint(a, b)</code> (a到b随机整数), <code>random.choice(seq)</code> (序列随机选一个), <code>random.shuffle(list)</code> (原地打乱列表)。</li>\n<li><code>pandas</code>: 数据分析库 (见后文)。</li>\n<li><code>matplotlib.pyplot</code>: 数据可视化库 (见后文)。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 某 Python 程序如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s=<span class=\"built_in\">input</span>()</span><br><span class=\"line\">k=<span class=\"number\">0</span> ; n=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span>&lt;=x <span class=\"keyword\">and</span> x&lt;=<span class=\"string\">&quot;g&quot;</span>:</span><br><span class=\"line\">      k=(<span class=\"built_in\">ord</span>(x)-<span class=\"built_in\">ord</span>(<span class=\"string\">&quot;a&quot;</span>)+<span class=\"number\">5</span>)%<span class=\"number\">7</span>+<span class=\"number\">1</span></span><br><span class=\"line\">   <span class=\"keyword\">elif</span> <span class=\"string\">&quot;1&quot;</span>&lt;=x <span class=\"keyword\">and</span> x&lt;=<span class=\"string\">&quot;5&quot;</span>:</span><br><span class=\"line\">      n=<span class=\"built_in\">int</span>(x)</span><br><span class=\"line\">keynum=n*<span class=\"number\">7</span>+k</span><br><span class=\"line\"><span class=\"built_in\">print</span>(keynum)</span><br></pre></td></tr></table></figure>\n<p>程序运行时, 若输出为 28 , 则可能的输入是<br>A. y9Ac4<br>B. b3a4A<br>C. a4kb3<br>D. ha9k3<br><strong>【答案】</strong> C<br><strong>【解析】</strong> 输出 <code>keynum = n*7 + k = 28</code>。因为 <code>1 &lt;= k &lt;= 7</code>，<code>1 &lt;= n &lt;= 5</code>。<br>尝试可能的 n 值：<br>若 n&#x3D;1, 7+k&#x3D;28, k&#x3D;21 (不可能)<br>若 n&#x3D;2, 14+k&#x3D;28, k&#x3D;14 (不可能)<br>若 n&#x3D;3, 21+k&#x3D;28, k&#x3D;7<br>若 n&#x3D;4, 28+k&#x3D;28, k&#x3D;0 (不可能)<br>所以必须 n&#x3D;3, k&#x3D;7。<br>n&#x3D;3 要求输入字符串中最后一个数字字符是 ‘3’。<br>k&#x3D;7 要求最后一个 a-g 范围内的字符 x 满足 <code>(ord(x)-ord(&quot;a&quot;)+5)%7+1 = 7</code>，即 <code>(ord(x)-ord(&quot;a&quot;)+5)%7 = 6</code>。<br>测试选项C: 输入 “a4kb3”<br>x&#x3D;’a’: k&#x3D;(ord(‘a’)-ord(‘a’)+5)%7+1 &#x3D; 5%7+1 &#x3D; 6<br>x&#x3D;’4’: n&#x3D;4<br>x&#x3D;’k’: 不在范围内，n, k 不变<br>x&#x3D;’b’: k&#x3D;(ord(‘b’)-ord(‘a’)+5)%7+1 &#x3D; (1+5)%7+1 &#x3D; 6%7+1 &#x3D; 7<br>x&#x3D;’3’: n&#x3D;3<br>循环结束时 n&#x3D;3, k&#x3D;7。 keynum &#x3D; 3*7 + 7 &#x3D; 28。符合要求。</p>\n</li>\n</ul>\n<h2 id=\"03-进阶算法及其程序实现\"><a href=\"#03-进阶算法及其程序实现\" class=\"headerlink\" title=\"03 进阶算法及其程序实现\"></a>03 进阶算法及其程序实现</h2><h3 id=\"解析算法\"><a href=\"#解析算法\" class=\"headerlink\" title=\"解析算法\"></a>解析算法</h3><p>利用数学公式或逻辑推导直接求解。</p>\n<ul>\n<li><em>例:</em> 计算圆面积 <code>S = math.pi * r**2</code>。求解一元二次方程。</li>\n</ul>\n<h3 id=\"枚举算法-穷举法\"><a href=\"#枚举算法-穷举法\" class=\"headerlink\" title=\"枚举算法 (穷举法)\"></a>枚举算法 (穷举法)</h3><p>一一列举所有可能解，并验证是否满足条件。通常需要循环和判断。</p>\n<ul>\n<li><p><em>核心:</em> 循环(列举) + 判断(验证)</p>\n</li>\n<li><p><em>适用:</em> 解空间有限且不大。</p>\n</li>\n<li><p><em>优化:</em> 剪枝 (提前排除不可能的分支)。</p>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 某Python程序如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入数字字符串：&quot;</span>)</span><br><span class=\"line\">s=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">flag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(a)-<span class=\"number\">1</span>, <span class=\"number\">2</span>): <span class=\"comment\"># 枚举下标i (0, 2, 4...)</span></span><br><span class=\"line\">    dl=<span class=\"built_in\">int</span>(a[i])</span><br><span class=\"line\">    d2=<span class=\"built_in\">int</span>(a[i+<span class=\"number\">1</span>])</span><br><span class=\"line\">    t=dl+flag*d2         <span class=\"comment\"># 计算</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> t&lt;<span class=\"number\">0</span>: t+=<span class=\"number\">10</span>        <span class=\"comment\"># 调整t到0-9</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> t&gt;=<span class=\"number\">10</span>: t-=<span class=\"number\">10</span></span><br><span class=\"line\">    s=<span class=\"built_in\">str</span>(t)+s           <span class=\"comment\"># 结果逆序拼接</span></span><br><span class=\"line\">    flag=-flag           <span class=\"comment\"># flag在1和-1间切换</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(a)%<span class=\"number\">2</span>==<span class=\"number\">1</span>:          <span class=\"comment\"># 处理奇数长度的最后一个字符</span></span><br><span class=\"line\">    s+=a[<span class=\"built_in\">len</span>(a)-<span class=\"number\">1</span>]       <span class=\"comment\"># 直接拼接到末尾 (注意不是逆序)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br></pre></td></tr></table></figure>\n<p>程序运行时，若输入“48135”，则输出的结果是<br>A. 528 B. 582 C. 825 D. 285<br><strong>【答案】</strong> C<br><strong>【解析】</strong><br>输入 “48135”, len(a)&#x3D;5<br>i&#x3D;0: d1&#x3D;4, d2&#x3D;8, flag&#x3D;1. t&#x3D;4+1*8&#x3D;12. t&gt;&#x3D;10, t&#x3D;12-10&#x3D;2. s&#x3D;”2”. flag&#x3D;-1.<br>i&#x3D;2: d1&#x3D;1, d2&#x3D;3, flag&#x3D;-1. t&#x3D;1+(-1)*3&#x3D;-2. t&lt;0, t&#x3D;-2+10&#x3D;8. s&#x3D;”8”+”2”&#x3D;”82”. flag&#x3D;1.<br>循环结束 (i&#x3D;4 不满足 &lt; len(a)-1)。<br>len(a)%2 &#x3D;&#x3D; 1 (5%2&#x3D;1)，执行 s +&#x3D; a[len(a)-1]，即 s +&#x3D; a[4]。<br>a[4] 是 ‘5’. s &#x3D; “82” + “5” &#x3D; “825”.<br>输出 825。</p>\n</li>\n</ul>\n<h2 id=\"04-pandas-Matplotlib\"><a href=\"#04-pandas-Matplotlib\" class=\"headerlink\" title=\"04 pandas + Matplotlib\"></a>04 pandas + Matplotlib</h2><h3 id=\"Excel与数据处理基础\"><a href=\"#Excel与数据处理基础\" class=\"headerlink\" title=\"Excel与数据处理基础\"></a>Excel与数据处理基础</h3><ul>\n<li><strong>数据问题:</strong> 缺失、重复、异常 (离群值)、逻辑错误、格式不一。</li>\n<li><strong>处理方法:</strong><ul>\n<li><strong>缺失:</strong> 删除、填充 (均值、中位数、众数、模型预测)。</li>\n<li><strong>重复:</strong> 识别并删除或合并。</li>\n<li><strong>异常:</strong> 识别 (箱线图、统计规则) 并修正或删除。</li>\n<li><strong>逻辑错误:</strong> 修正或删除。</li>\n<li><strong>格式不一:</strong> 数据类型转换、单位统一。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"pandas-核心对象\"><a href=\"#pandas-核心对象\" class=\"headerlink\" title=\"pandas 核心对象\"></a>pandas 核心对象</h3><ul>\n<li><strong>Series:</strong> 一维带标签数组。 <code>s = pd.Series(data, index=index)</code></li>\n<li><strong>DataFrame:</strong> 二维带标签表格型数据结构。 <code>df = pd.DataFrame(data, index=index, columns=columns)</code></li>\n</ul>\n<h3 id=\"DataFrame-常用操作\"><a href=\"#DataFrame-常用操作\" class=\"headerlink\" title=\"DataFrame 常用操作\"></a>DataFrame 常用操作</h3><ul>\n<li><p><strong>创建&#x2F;读取:</strong></p>\n<ul>\n<li><code>pd.DataFrame(字典或列表)</code></li>\n<li><code>pd.read_excel(&#39;filename.xlsx&#39;)</code></li>\n<li><code>pd.read_csv(&#39;filename.csv&#39;)</code></li>\n</ul>\n</li>\n<li><p><strong>查看数据:</strong></p>\n<ul>\n<li><code>df.head(n)</code>: 查看前n行 (默认5)。</li>\n<li><code>df.tail(n)</code>: 查看后n行 (默认5)。</li>\n<li><code>df.shape</code>: 查看形状 (行数, 列数)。</li>\n<li><code>df.info()</code>: 查看基本信息 (列名、非空值数、数据类型)。</li>\n<li><code>df.describe()</code>: 查看数值列的描述性统计。</li>\n</ul>\n</li>\n<li><p><strong>选取数据:</strong></p>\n<ul>\n<li><strong>选列:</strong> <code>df[&#39;列名&#39;]</code> (返回Series), <code>df[[&#39;列名1&#39;, &#39;列名2&#39;]]</code> (返回DataFrame)。</li>\n<li><strong>选行:</strong><ul>\n<li>按标签 (索引): <code>df.loc[行标签]</code> 或 <code>df.loc[行标签1:行标签N]</code></li>\n<li>按位置 (整数): <code>df.iloc[行号]</code> 或 <code>df.iloc[行号1:行号N]</code></li>\n</ul>\n</li>\n<li><strong>选行列:</strong> <code>df.loc[行标签, 列名]</code>, <code>df.iloc[行号, 列号]</code></li>\n<li><strong>条件选取:</strong> <code>df[df[&#39;列名&#39;] &gt; value]</code>, <code>df[ (df[&#39;列1&#39;]&gt;v1) &amp; (df[&#39;列2&#39;]==v2) ]</code> (<code>&amp;</code>:与, <code>|</code>:或, <code>~</code>:非)</li>\n</ul>\n</li>\n<li><p><strong>修改数据:</strong></p>\n<ul>\n<li>直接赋值: <code>df.loc[行标签, 列名] = new_value</code>, <code>df[&#39;列名&#39;] = new_values</code></li>\n</ul>\n</li>\n<li><p><strong>删除数据:</strong></p>\n<ul>\n<li><code>df.drop(labels, axis=0)</code>: 删除行 (axis&#x3D;0 默认)。 <code>labels</code> 为行索引列表。</li>\n<li><code>df.drop(labels, axis=1)</code>: 删除列 (axis&#x3D;1)。 <code>labels</code> 为列名列表。</li>\n</ul>\n</li>\n<li><p><strong>排序:</strong></p>\n<ul>\n<li><code>df.sort_values(by=&#39;列名&#39;, ascending=True/False)</code>: 按值排序。</li>\n<li><code>df.sort_index(ascending=True/False)</code>: 按索引排序。</li>\n</ul>\n</li>\n<li><p><strong>分组聚合:</strong></p>\n<ul>\n<li><code>df.groupby(&#39;分组列名&#39;).agg_function()</code></li>\n<li><code>agg_function</code> 可以是 <code>sum()</code>, <code>mean()</code>, <code>count()</code>, <code>size()</code>, <code>max()</code>, <code>min()</code> 等。</li>\n<li><code>df.groupby([&#39;列1&#39;, &#39;列2&#39;]).sum()</code>: 按多列分组。</li>\n</ul>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 某校学生的课外运动积分存储在文件 “jifen.xlsx” 中… 编写 Python 程序, 统计并输出积分大于100的高一01班学生信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">df1 = pd.read_excel(<span class=\"string\">&quot;jifen.xlsx&quot;</span>) <span class=\"comment\"># 读文件中的数据</span></span><br><span class=\"line\"><span class=\"comment\"># --- 划线处代码 ---</span></span><br><span class=\"line\"><span class=\"comment\"># ① df1=df1[df1.积分&gt;100]</span></span><br><span class=\"line\"><span class=\"comment\"># ② df1=df1[df1.班级==&quot;高一01班&quot;]</span></span><br><span class=\"line\"><span class=\"comment\"># ③ df1=df1.sort_values(&quot;积分&quot;,ascending=False) #降序排序</span></span><br><span class=\"line\"><span class=\"comment\"># ④ df1= df1.head(100) #取前100条数据</span></span><br><span class=\"line\"><span class=\"comment\"># --------------------</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1)</span><br></pre></td></tr></table></figure>\n<p>要实现上述功能，下列代码中正确的是<br>A. ②① B. ②④ C. ③① D. ③④<br><strong>【答案】</strong> A<br><strong>【解析】</strong> 需要筛选满足两个条件的行：1. 班级是”高一01班” (对应语句②)；2. 积分大于100 (对应语句①)。这两个筛选操作的顺序可以互换，②①或①②都可以。排序③和取前100条④与题目要求无关。</p>\n</li>\n</ul>\n<h3 id=\"Matplotlib-数据可视化\"><a href=\"#Matplotlib-数据可视化\" class=\"headerlink\" title=\"Matplotlib 数据可视化\"></a>Matplotlib 数据可视化</h3><ul>\n<li><strong>导入:</strong> <code>import matplotlib.pyplot as plt</code></li>\n<li><strong>基本绘图:</strong><ul>\n<li><code>plt.plot(x, y)</code>: 折线图 (适合趋势变化)。</li>\n<li><code>plt.bar(x, height)</code>: 柱状图 (适合比较大小)。</li>\n<li><code>plt.barh(y, width)</code>: 条形图 (适合类别名较长时)。</li>\n<li><code>plt.scatter(x, y)</code>: 散点图 (适合变量间关系)。</li>\n<li><code>plt.pie(x, labels=labels, autopct=&#39;%1.1f%%&#39;)</code>: 饼图 (适合比例构成)。</li>\n</ul>\n</li>\n<li><strong>图表元素设置:</strong><ul>\n<li><code>plt.title(&#39;标题&#39;)</code></li>\n<li><code>plt.xlabel(&#39;X轴标签&#39;)</code></li>\n<li><code>plt.ylabel(&#39;Y轴标签&#39;)</code></li>\n<li><code>plt.xticks(ticks, labels)</code>: 设置X轴刻度。</li>\n<li><code>plt.yticks()</code>: 设置Y轴刻度。</li>\n<li><code>plt.legend([&#39;图例1&#39;, &#39;图例2&#39;])</code>: 显示图例。</li>\n<li><code>plt.grid(True)</code>: 显示网格线。</li>\n<li><code>plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]</code>: 设置中文字体 (解决中文乱码)。</li>\n<li><code>plt.rcParams[&#39;axes.unicode_minus&#39;] = False</code>: 解决负号显示问题。</li>\n</ul>\n</li>\n<li><strong>显示图表:</strong> <code>plt.show()</code></li>\n</ul>\n<h2 id=\"05-信息系统支撑技术\"><a href=\"#05-信息系统支撑技术\" class=\"headerlink\" title=\"05 信息系统支撑技术\"></a>05 信息系统支撑技术</h2><h3 id=\"信息系统组成与功能\"><a href=\"#信息系统组成与功能\" class=\"headerlink\" title=\"信息系统组成与功能\"></a>信息系统组成与功能</h3><ul>\n<li><p><strong>组成部分 (5部分):</strong></p>\n<ol>\n<li><strong>硬件 (Hardware):</strong> 计算机 (CPU, 内存, 存储器, 输入&#x2F;输出设备), 服务器, 网络设备 (路由器, 交换机), 传感设备, 智能终端等物理实体。</li>\n<li><strong>软件 (Software):</strong><ul>\n<li><strong>系统软件:</strong> 操作系统 (Windows, Linux, macOS), 数据库管理系统 (DBMS: MySQL, Oracle, SQL Server)。</li>\n<li><strong>应用软件:</strong> 为特定目的开发的程序 (如学考报名系统, ERP, CRM)。</li>\n</ul>\n</li>\n<li><strong>数据 (Data):</strong> 系统处理的对象，存储在数据库中。</li>\n<li><strong>网络 (Network):</strong> 连接硬件、传输数据的通信设施 (有线、无线、协议)。</li>\n<li><strong>人员 (People):</strong> 用户、管理员、开发人员、维护人员等。</li>\n</ol>\n</li>\n<li><p><strong>功能:</strong> 数据采集、输入、传输、存储、处理、输出、控制、反馈。</p>\n</li>\n<li><p><strong>【24.7学考真题】</strong> 下列关于该系统组成与功能的说法, 正确的是 <em>(系统为公司打卡系统, 通过人脸识别)</em><br>A. 该系统的硬件仅指打卡机与服务器<br>B. 该系统的用户只包括员工和管理员<br>C. 该系统需要事先采集员工的人脸数据<br>D. 该系统的出勤统计功能由打卡机完成<br><strong>【答案】</strong> C<br><strong>【解析】</strong> A错，还需要网络设备等；B错，可能还有开发维护人员；C对，人脸识别需要预先录入数据；D错，统计功能通常由服务器端的软件完成，打卡机主要负责采集和传输。</p>\n</li>\n</ul>\n<h3 id=\"网络概念与传输\"><a href=\"#网络概念与传输\" class=\"headerlink\" title=\"网络概念与传输\"></a>网络概念与传输</h3><ul>\n<li><strong>分类:</strong><ul>\n<li>按范围: 局域网 (LAN), 城域网 (MAN), 广域网 (WAN)。</li>\n<li>按介质: 有线网, 无线网。</li>\n</ul>\n</li>\n<li><strong>网络协议 (TCP&#x2F;IP):</strong><ul>\n<li><strong>应用层:</strong> HTTP, FTP, SMTP, DNS 等 (定义应用程序如何交互)。</li>\n<li><strong>传输层:</strong> TCP (可靠传输), UDP (不可靠但高效传输) (管理端到端的数据传输)。</li>\n<li><strong>网络层 (网际层):</strong> IP (负责寻址和路由，将数据包从源送到目的地)。</li>\n<li><strong>数据链路层:</strong> 负责物理介质上的数据帧传输 (如以太网协议)。</li>\n<li><strong>物理层:</strong> 定义物理连接的电气、机械特性。</li>\n</ul>\n</li>\n<li><strong>IP地址:</strong> 标识网络中的设备，由网络号和主机号组成。IPv4 (32位), IPv6 (128位)。</li>\n<li><strong>域名系统 (DNS):</strong> 将域名 (如 <code>www.google.com</code>) 解析为 IP 地址。</li>\n<li><strong>URL (统一资源定位器):</strong> <code>协议://主机名[:端口号]/路径/文件名</code> (如 <code>http://www.example.com:80/index.html</code>)</li>\n</ul>\n<h3 id=\"传感技术\"><a href=\"#传感技术\" class=\"headerlink\" title=\"传感技术\"></a>传感技术</h3><ul>\n<li><p><strong>传感器:</strong> 检测物理量 (温度、湿度、光照、压力、声音、加速度等) 并将其转换为可用信号 (通常是电信号) 的装置。</p>\n</li>\n<li><p><strong>组成:</strong> 敏感元件 (感受被测量) + 转换元件 (转换成电信号) + 转换电路。</p>\n</li>\n<li><p><strong>RFID (射频识别):</strong> 无线通信技术，通过无线电讯号识别特定目标并读写相关数据。</p>\n<ul>\n<li>组成: 标签 (Tag, 存储信息)、读写器 (Reader)、天线。</li>\n<li>类型: 无源RFID (标签自身不带电，靠读写器能量激活)、有源RFID (标签自带电池)。</li>\n</ul>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 有如下三个传感器的应用场景：(1)拍手时楼道内的灯自动点亮；(2)手机根据环境亮度自动调节屏幕亮度；(3)智能手环具有计步功能。为上述三个应用场景依次选择一种适用的传感器，下列选项正确的是<br>A. 声音传感器、光线传感器、压力传感器<br>B. 声音传感器、光线传感器、加速度传感器<br>C. 压力传感器、距离传感器、光线传感器<br>D. 光线传感器、声音传感器、加速度传感器<br><strong>【答案】</strong> B<br><strong>【解析】</strong> (1) 检测声音用声音传感器；(2) 检测亮度用光线传感器；(3) 计步通常通过检测运动状态变化，使用加速度传感器。</p>\n</li>\n</ul>\n<h3 id=\"信息系统安全-补充\"><a href=\"#信息系统安全-补充\" class=\"headerlink\" title=\"信息系统安全 (补充)\"></a>信息系统安全 (补充)</h3><ul>\n<li><strong>加密:</strong><ul>\n<li><strong>对称加密:</strong> 加解密用同一密钥 (如 DES, AES)。优点：速度快。缺点：密钥分发困难。</li>\n<li><strong>非对称加密:</strong> 公钥加密，私钥解密 (或私钥签名，公钥验证) (如 RSA)。优点：密钥分发安全。缺点：速度慢。</li>\n</ul>\n</li>\n<li><strong>数字签名:</strong> 利用非对称加密，用私钥对信息摘要进行加密，保证信息的<strong>完整性</strong>、<strong>身份认证</strong>和<strong>不可否认性</strong>。</li>\n<li><strong>防火墙:</strong> 隔离内外网络，控制网络访问。</li>\n</ul>\n<h3 id=\"信息系统架构\"><a href=\"#信息系统架构\" class=\"headerlink\" title=\"信息系统架构\"></a>信息系统架构</h3><ul>\n<li><p><strong>C&#x2F;S (Client&#x2F;Server):</strong> 客户端需要安装专门软件，服务器提供服务。优点：性能好，界面丰富。缺点：开发维护更新成本高。</p>\n</li>\n<li><p><strong>B&#x2F;S (Browser&#x2F;Server):</strong> 客户端使用浏览器访问，主要逻辑在服务器。优点：部署维护更新方便。缺点：性能和用户体验可能受限。</p>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 设计该系统的网络应用软件时，为方便软件的升级和维护，应选择的实现架构是 （单选，A.B&#x2F;S架构 B.C&#x2F;S架构）<br><em>（题目背景是一个心率血压监测系统，用户通过手机APP查看）</em><br><em>(注意：虽然手机APP是客户端，但现代APP常内嵌网页或通过API与Web服务器交互，很多后台系统偏向B&#x2F;S的维护便利性。不过，如果强调的是客户端软件本身，则C&#x2F;S特点更明显。此题答案可能依赖具体情境，但学考中通常将 <strong>易于维护升级</strong> 指向 <strong>B&#x2F;S架构</strong>，因为只需更新服务器端。）</em><br><strong>【推测答案】</strong> A (基于“方便升级维护”通常指向B&#x2F;S的优点)</p>\n</li>\n</ul>\n<h2 id=\"06-信息系统硬件搭建与软件开发-简述\"><a href=\"#06-信息系统硬件搭建与软件开发-简述\" class=\"headerlink\" title=\"06 信息系统硬件搭建与软件开发 (简述)\"></a>06 信息系统硬件搭建与软件开发 (简述)</h2><h3 id=\"开发过程\"><a href=\"#开发过程\" class=\"headerlink\" title=\"开发过程\"></a>开发过程</h3><ol>\n<li><strong>系统规划:</strong> 可行性分析 (技术、经济、操作)。</li>\n<li><strong>系统分析:</strong> 需求分析 (功能、性能、数据、安全)。产出物：数据流图、数据字典、需求规格说明书。</li>\n<li><strong>系统设计:</strong><ul>\n<li><strong>概要设计:</strong> 体系结构设计、模块划分、数据库设计。</li>\n<li><strong>详细设计:</strong> 模块内部算法设计、数据库物理设计、界面设计。</li>\n</ul>\n</li>\n<li><strong>系统实施:</strong> 编码、硬件购买与安装、数据库建立、系统测试 (单元测试、集成测试、系统测试、验收测试)。</li>\n<li><strong>系统运行与维护:</strong> 系统转换、日常维护、系统改进。</li>\n</ol>\n<h3 id=\"智能硬件-如-micro-bit-ESP32\"><a href=\"#智能硬件-如-micro-bit-ESP32\" class=\"headerlink\" title=\"智能硬件 (如 micro:bit, ESP32)\"></a>智能硬件 (如 micro:bit, ESP32)</h3><ul>\n<li>集成了处理器、内存、输入&#x2F;输出引脚、通信模块 (蓝牙、Wi-Fi) 的微控制器板。</li>\n<li>可连接各种传感器和执行器。</li>\n<li>常用编程语言：MicroPython, C&#x2F;C++, 图形化编程。</li>\n</ul>\n<h3 id=\"IoT-物联网\"><a href=\"#IoT-物联网\" class=\"headerlink\" title=\"IoT (物联网)\"></a>IoT (物联网)</h3><ul>\n<li><p>通过各种信息传感设备，将物品与互联网连接起来，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理。</p>\n</li>\n<li><p><strong>关键技术:</strong> 传感技术、网络通信技术 (Wi-Fi, 蓝牙, Zigbee, LoRa, NB-IoT, 5G)、云计算、大数据、人工智能。</p>\n</li>\n<li><p><strong>架构 (常见分层):</strong> 感知层 (数据采集)、网络层 (数据传输)、平台层 (数据处理存储)、应用层 (面向用户)。</p>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 该系统的心率历史数据存储在 （单选，填字母：A.智能终端／B.服务器）中。 <em>(系统为心率血压监测系统)</em><br><strong>【答案】</strong> B<br><strong>【解析】</strong> 智能终端（如手环）通常只做短期存储或实时显示，历史数据、需要长期保存和分析的数据一般存储在服务器的数据库中。</p>\n</li>\n<li><p><strong>【23.7学考真题】</strong> 该系统服务器端程序采用Flask Web框架编写，若智能终端某次提交心率数据到服务器的URL为 <code>http://192.168.0.20:8080/upload?val=76</code>，则本次提交的心率值为_________。<br><strong>【答案】</strong> 76<br><strong>【解析】</strong> URL中 <code>?</code> 后面是查询参数，格式为 <code>key=value</code>。这里 <code>val=76</code>，表示参数 <code>val</code> 的值是 76，对应提交的心率值。</p>\n</li>\n</ul>\n","feature":true,"text":"01 信息基础理论DIKW模型 D (Data - 数据): 对客观事物的符号表示，是原始的、未经处理的素材。 例: 传感器读数、用户注册信息、交易记录。 I ...","permalink":"/post/浙江学考信息技术学考复习要点","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"高中","slug":"高中","count":2,"path":"api/categories/高中.json"},{"name":"数据与信息","slug":"高中/数据与信息","count":1,"path":"api/categories/高中/数据与信息.json"},{"name":"编程","slug":"高中/数据与信息/编程","count":1,"path":"api/categories/高中/数据与信息/编程.json"},{"name":"Python","slug":"高中/数据与信息/编程/Python","count":1,"path":"api/categories/高中/数据与信息/编程/Python.json"}],"tags":[{"name":"教材学习","slug":"教材学习","count":2,"path":"api/tags/教材学习.json"},{"name":"学考","slug":"学考","count":1,"path":"api/tags/学考.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#01-%E4%BF%A1%E6%81%AF%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA\"><span class=\"toc-text\">01 信息基础理论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DIKW%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">DIKW模型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E7%BC%96%E7%A0%81%E4%B8%8E%E6%95%B0%E5%AD%97%E5%8C%96\"><span class=\"toc-text\">信息编码与数字化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%88%B6%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">数制问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E5%8C%96\"><span class=\"toc-text\">数字化</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%80%9D%E7%BB%B4%E4%B8%8E%E5%A4%84%E7%90%86\"><span class=\"toc-text\">大数据的思维与处理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">数据安全</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-AI\"><span class=\"toc-text\">人工智能 (AI)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#02-Python%E5%9F%BA%E7%A1%80%E4%BB%A3%E7%A0%81%E5%8F%8A%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">02 Python基础代码及常见模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Python%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Python基础数据结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Python%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Python程序结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97%E7%9A%84%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">函数与模块的调用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#03-%E8%BF%9B%E9%98%B6%E7%AE%97%E6%B3%95%E5%8F%8A%E5%85%B6%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">03 进阶算法及其程序实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">解析算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%9A%E4%B8%BE%E7%AE%97%E6%B3%95-%E7%A9%B7%E4%B8%BE%E6%B3%95\"><span class=\"toc-text\">枚举算法 (穷举法)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#04-pandas-Matplotlib\"><span class=\"toc-text\">04 pandas + Matplotlib</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Excel%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">Excel与数据处理基础</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pandas-%E6%A0%B8%E5%BF%83%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">pandas 核心对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DataFrame-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">DataFrame 常用操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Matplotlib-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96\"><span class=\"toc-text\">Matplotlib 数据可视化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#05-%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%94%AF%E6%92%91%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">05 信息系统支撑技术</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90%E4%B8%8E%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">信息系统组成与功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E6%A6%82%E5%BF%B5%E4%B8%8E%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">网络概念与传输</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E6%84%9F%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">传感技术</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8-%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">信息系统安全 (补充)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">信息系统架构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#06-%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E7%A1%AC%E4%BB%B6%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91-%E7%AE%80%E8%BF%B0\"><span class=\"toc-text\">06 信息系统硬件搭建与软件开发 (简述)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">开发过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6-%E5%A6%82-micro-bit-ESP32\"><span class=\"toc-text\">智能硬件 (如 micro:bit, ESP32)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#IoT-%E7%89%A9%E8%81%94%E7%BD%91\"><span class=\"toc-text\">IoT (物联网)</span></a></li></ol></li></ol>","author":{"name":"LaoShui","slug":"blog-author","avatar":"/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"信息技术 · 必修一 · 第一章 数据与信息 知识点","uid":"e762971b5e5d5706d967112712c93106","slug":"信息技术-·-必修一-·-第一章-数据与信息-知识点","date":"2024-12-13T10:06:22.000Z","updated":"2025-02-10T12:37:11.976Z","comments":true,"path":"api/articles/信息技术-·-必修一-·-第一章-数据与信息-知识点.json","keywords":null,"cover":"https://pic.imgdb.cn/item/675c091ed0e0a243d4e3ae25.jpg","text":"当我写下这篇文章时 我正式开始了对高中信息技术教材的学习 我会在空闲时间不断补充内容 数据是对客观事物的符号表示，如图形符号、数字、字母等。其中，数字是最简单的...","permalink":"/post/信息技术-·-必修一-·-第一章-数据与信息-知识点","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"高中","slug":"高中","count":2,"path":"api/categories/高中.json"},{"name":"必修一","slug":"高中/必修一","count":1,"path":"api/categories/高中/必修一.json"},{"name":"数据与信息","slug":"高中/必修一/数据与信息","count":1,"path":"api/categories/高中/必修一/数据与信息.json"},{"name":"编程","slug":"高中/必修一/数据与信息/编程","count":1,"path":"api/categories/高中/必修一/数据与信息/编程.json"},{"name":"Python","slug":"高中/必修一/数据与信息/编程/Python","count":1,"path":"api/categories/高中/必修一/数据与信息/编程/Python.json"}],"tags":[{"name":"教材学习","slug":"教材学习","count":2,"path":"api/tags/教材学习.json"}],"author":{"name":"LaoShui","slug":"blog-author","avatar":"/favicon.ico","link":"/","description":"<p>不忘初心，青春朝气永在</p><p>志在千秋，百年恰是少年</p>","socials":{"github":"https://github.com/laoshuikaixue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"aliyun_developer":{"icon":"/svg/aliyun.svg","link":"https://developer.aliyun.com/profile/dtvevsc2d4xha"}}}},"feature":true}}